#!/usr/bin/python
# vim: set fileencoding=utf-8
# fourth2json: analyze FourthParty output to produce JSON reports
#   Copyright â’¸ 2012  Clint Adams

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA

import json
import sqlite3
import sys
import Cookie

def db_connect(fn):
    conn = sqlite3.connect(fn)
    return conn

def db_query(conn, query):
    c = conn.cursor()
    c.execute(query)
    return c

if len(sys.argv) != 4:
    print >> sys.stderr, 'Usage: ' + sys.argv[0] + ' vanillafile dntfile beeftacofile'
    sys.exit(1)

output = {}
topid_cookies = {}

for f in sys.argv[1:]:
    conn = db_connect(f)
    c = db_query(conn, 'select top_id, value from http_response_headers hrh left join http_responses hr on hrh.http_response_id=hr.id left join pages p on hr.page_id=p.id where name="Set-Cookie"')

    for row in c:
        C = Cookie.SimpleCookie()
        try:
            C.load(str(row[1]))
            cookies = {}
            for cookie in C.items():
                fields = dict(cookie[1])
                fields['value'] = cookie[1].value
                cookies[cookie[1].key] = fields
            topid_cookies[str(row[0])] = cookies # FIXME
        except Cookie.CookieError:
            print >> sys.stderr, "python's Cookie seems broken; discarding cookie entirely"
    output[f] = topid_cookies

j = json.dumps(output, indent=4)
print j
